<?php

/**
 * UserPracticeAreaLocationTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class UserPracticeAreaLocationTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object UserPracticeAreaLocationTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('UserPracticeAreaLocation');
    }

    public static function checkCountiesExist($countyId)
    {
        if(!is_numeric($countyId))
        return false;

        $asResult = Doctrine_Query::create()
        ->select("U.*")
        ->from('UserPracticeAreaLocation U')
        ->where("U.CountyId = ?", $countyId)
        ->fetchArray();

        if(count($asResult)> 0)
        return true;
        else
        return false;

    }

    /**
     * Function to Delete Users Old Practice Area Location
     *
     * @param unknown_type $id
     */
    public static function deleteOldPracticeAreaLocationData($id){
        $del = Doctrine_Query::create()
        ->delete()
        ->from('UserPracticeAreaLocation upal')
        ->where('upal.UserId = ?',$id)
        ->execute();
    }

    /**
     * Function to Get State county at Edit Network Profile
     *
     * @param unknown_type $id
     * @return unknown
     */
    public static function getStateCountyRecordList($id)
    {
        $sql = Doctrine_Query::create()
        ->select('upal.StateId,upal.CountyId')
        ->from('UserPracticeAreaLocation upal')
        ->where('upal.UserId = ?',$id);
        $arrList = $sql->execute(array(),Doctrine_Core::HYDRATE_ARRAY);
        #clsCommon::pr($arrList);
        $arrPracticeAreaLoc = array();
        if(count($arrList) > 0 ){
            foreach ($arrList as $arrPA){
                #if ($arrPA['PracticeareaId'] == 1) {
                if ($arrPA['StateId'] == -1) {
                    $arrPracticeAreaLoc[] = -1;
                } else if ($arrPA['StateId'] != 0  && $arrPA['CountyId'] == 0)  {
                    $arrPracticeAreaLoc[] = $arrPA['StateId'].'-0';
                } else if($arrPA['StateId'] != 0  && $arrPA['CountyId'] != 0) {
                    #$arrPracticeArea[] = $arrPA['PracticeareaId'];
                    $arrPracticeAreaLoc[] = $arrPA['CountyId'].'-1';
                }
            }
        }
        #clsCommon::pr($arrPracticeAreaLoc);
        return implode(",", $arrPracticeAreaLoc);
    } // End of Function

    /**
     * Function to Get State which used in User Practice Area Location 
     *
     */
    public static function getLocationStates(){
        $sql = Doctrine_Query::create()
        ->select('upal.StateId,upal.Id, s.Name as StateName')
        ->from('UserPracticeAreaLocation upal')
        ->leftJoin('upal.UserPracticeAreaLocationUsers u')
        ->leftJoin('upal.UserPracticeAreaLocationState s')
        ->where('u.Status = ?','Active')
        ->orderBy('s.Name ASC');
        $arrList = $sql->execute(array(),Doctrine_Core::HYDRATE_ARRAY);

        $stateArr = array();
        if(!empty($arrList)) {
            for($i=0; $i<count($arrList) ; $i++ ) {
                $stateArr[$arrList[$i]['StateId']]  = $arrList[$i]['StateName'];
            } // End of For
        }
        #clsCommon::pr($arrList);
        #clsCommon::pr($stateArr,1);
        return $stateArr;

    } // End of Function

    /**
     * Function to get County based on State from User Practice Area Location 
     *
     * @param unknown_type $stateId
     */
    public static function getStateCounty($stateId) {
        $sql = Doctrine_Query::create()
        ->select('upal.CountyId,upal.Id, c.Name as CountyName')
        ->from('UserPracticeAreaLocation upal')
        ->leftJoin('upal.UserPracticeAreaLocationUsers u')
        ->leftJoin('upal.UserPracticeAreaLocationCounties c')
        ->where('upal.StateId = ? ', $stateId)
        ->andWhere('u.Status = ?','Active')
        ->andWhere('upal.CountyId != ? ', 0)
        ->orderBy('c.Name ASC');
        $arrList = $sql->execute(array(),Doctrine_Core::HYDRATE_ARRAY);

        $countyArr = array();
        if(!empty($arrList)) {
            for($i=0; $i<count($arrList) ; $i++ ) {
                $countyArr[$arrList[$i]['CountyId']]  = $arrList[$i]['CountyName'];
            } // End of For
        }
        #clsCommon::pr($arrList);
        #clsCommon::pr($stateArr,1);
        return $countyArr;


    } // End of Function

    /**
     * Fuction to Get Users Practice Area Location
     *
     * @param unknown_type $userId
     */
    public static function getUsersPracticeLocation($userId){
        $sql = Doctrine_Query::create()
        //->select('upal.CountyId,upal.Id, c.Name as CountyName')
        ->from('UserPracticeAreaLocation upal')
        ->leftJoin('upal.UserPracticeAreaLocationCounties c')
        ->leftJoin('upal.UserPracticeAreaLocationState s')
        ->where('upal.UserId = ? ', $userId)
        ->andWhere('upal.StateId != ? ', '-1')
        ->orderBy('s.Name ASC, c.Name ASC');
        
        $result = array();
        $result = $sql->fetchArray() ;
        #clsCommon::pr($result);
        return $result ;
    } // End of Function
}