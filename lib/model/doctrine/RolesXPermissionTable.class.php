<?php

/**
 * RolesXPermissionTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RolesXPermissionTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object RolesXPermissionTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('RolesXPermission');
    }

    /**
     * THIS FUNCTION IS USE FOR GIVE THE LIST OF PERMISSION.
     *
     * @param unknown_type $id
     * @return unknown
     */
    public static function getPermissionList($id)
    {
        $sql = Doctrine_Query::create()
        ->from('RolesXPermission rxp')
        ->where('rxp.RoleId = ?',$id);
        $arrList = $sql->execute(array(),Doctrine_Core::HYDRATE_ARRAY);
        //clsCommon::pr($arrList,1);
        $arrPermissionList = array();
        if (count($arrList)>0) {
            foreach ($arrList as $arrPer){
                $arrPermissionList[] = $arrPer['PermissionId'];
            }
        }
        return $arrPermissionList;
    }

    /**
     *  THIS FUNCTION IS USE FOR DELETE THE OLD PERMISSION DATA.
     *
     * @param unknown_type $id
     */
    public static function deleteOldPermissionData($id){
        $del = Doctrine_Query::create()
        ->delete()
        ->from('RolesXPermission rxp')
        ->where('rxp.RoleId = ?',$id)
        ->execute();
    }

    /**
     * THIS FUNCTION IS USE FOR THE PORPOSE OF VIEW PAGE.
     *
     * @param unknown_type $id
     * @return unknown
     */
    public static function getPermissionRecordForViewPage($id)
    {
        $sql = Doctrine_Query::create()
        ->from('RolesXPermission rxp')
        ->where('rxp.RoleId = ?',$id);
        $arrList = $sql->execute(array(),Doctrine_Core::HYDRATE_ARRAY);
        //clsCommon::pr($arrList,1);
        $arrPerList = array();
        if (!empty($arrList)) {
            for ($i=0;$i<count($arrList);$i++)
            {
                $sql2 = Doctrine_Query::create()
                ->from('Permissions pr')
                ->where('pr.Id = ?',$arrList[$i]['PermissionId'])
                ->orderBy('pr.UniqueKey ASC');
                $arrListing = $sql2->execute(array(),Doctrine_Core::HYDRATE_ARRAY);
                //clsCommon::pr($arrListing);
                if (!empty($arrListing)) {
                	for ($p=0;$p<count($arrListing);$p++)
                	{
                	    $arrPerList[] = $arrListing[$p]['UniqueKey'];
                	}
                }
            }

        }
        return $arrPerList;
    }
}