<?php

/**
 * ThemeTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ThemeTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ThemeTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Theme');
    }

    public static function  getDefaultRecord()
    {
        $asResult = Doctrine_Query::create()
        ->select("t.*")
        ->from("Theme t")
        ->where("t.IsDefault = ?","Yes")
        ->fetchArray();

        return $asResult;
    }
    /* update the default of the theme*/
    public function changeIsDefault($snId)
    {
        if(!is_numeric($snId))
        return false;

        // for Update IsDefault of the id Yes
        $ssQuery =Doctrine_Query::create()
        ->update('Theme')
        ->set('IsDefault', '?', 'Yes')
        ->where('id = ?', $snId)
        ->execute();

        // for Update IsDefault where id is not checked NO
        $ssQuery =Doctrine_Query::create()
        ->update('Theme')
        ->set('IsDefault', '?', 'No')
        ->where('id <> ?', $snId)
        ->execute();
    }

    public static function getWidgetLength()
    {
        # THIS IS USE FOR GETTING THEME ID.
        $themeId = UsersWebsiteTable::getThemeId();

        $sql = Doctrine_Query::create()
        ->from('Theme th')
        ->where('th.Id = ?',$themeId['ThemeId'])
        ->fetchArray();

        $widgetLength = unserialize($sql[0]['Options']);
        return $widgetLength['TextWidgets'];
    }
}
