<?php

/**
 * ReviewRatingTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ReviewRatingTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object ReviewRatingTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('ReviewRating');
    }

    /**
     * check that user already inserted rating of not
     *
     * @param integer $userId
     * @param integer $customerId
     * @return boolean
     */
    public static function RatingExists($userId, $customerId)
    {
        $dbUrl = Doctrine_Query::create()
        ->from('ReviewRating RR')
        ->where('RR.UserId = ?', $userId)
        ->andWhere('RR.CustomerId = ?', $customerId)
        ->fetchArray();

        if (count($dbUrl) >= 1) {
            return true;
        }else {
            return false;
        }
    }

    /**
     * give the total and average rating
     *
     * @param integer $userId
     * @param integer $customerId
     * @return array
     */
    public static function getNoOfRatingAndAvgRating($userId, $customeId)
    {
        $ratingData = Doctrine_Query::create()
        ->addSelect('count(Id) AS noOfRating')
        ->addSelect('avg(Rate) AS avgRating')
        ->from('ReviewRating RR')
        ->where('RR.CustomerId = ?', $customeId)
        ->andWhere("RR.Status = ?", 'Active')
        ->fetchArray();

        return $ratingData;
    }


    /**
     * Function to Get Recent Review Rating 
     *
     * @return unknown
     */
    public static function getRecentReview() {
        $ratingData = Doctrine_Query::create()
        ->from('ReviewRating r')
        ->leftJoin('r.ReviewRatingUsers ru')
        ->leftJoin('r.ReviewRatingCustomers rc')
        ->where('r.Status = ?', 'Active')
        ->orderBy('r.Id DESC')
        ->limit(1);


        if(clsCommon::checkStateCookieExist() && clsCommon::checkCountyCookieExist()){
            //$ratingData->leftJoin('upa.UserPracticeAreaUsers pau');
            $ratingData->leftJoin('rc.UsersUserPracticeAreaLocation uupal');
            $ratingData->andWhere('uupal.CountyId = ? ', clsCommon::checkCountyCookieValue() );
        } else if(clsCommon::checkStateCookieExist())  {
            //$ratingData->leftJoin('upa.UserPracticeAreaUsers pau');
            $ratingData->leftJoin('rc.UsersUserPracticeAreaLocation uupal');
            $ratingData->andWhere('uupal.StateId = ? ', clsCommon::checkStateCookieValue() );
        }

        $result = $ratingData->fetchArray();
        if(!empty($result)) {
            return $result[0];
        } else {
            return array();
        }
    } // End of Function

}