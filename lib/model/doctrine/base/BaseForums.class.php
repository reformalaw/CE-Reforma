<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Forums', 'doctrine');

/**
 * BaseForums
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property integer $ForumCategoriesId
 * @property integer $LastTopicId
 * @property integer $LastTopicBy
 * @property integer $LastRepliedId
 * @property integer $LastRepliedBy
 * @property string $Title
 * @property string $Description
 * @property integer $TotalTopic
 * @property integer $TotalReplies
 * @property integer $Ordering
 * @property enum $Status
 * @property ForumCategories $ForumsForumCategories
 * @property Doctrine_Collection $ForumsForumTopics
 * @property Doctrine_Collection $ForumsForumReply
 * 
 * @method integer             getId()                    Returns the current record's "Id" value
 * @method integer             getForumCategoriesId()     Returns the current record's "ForumCategoriesId" value
 * @method integer             getLastTopicId()           Returns the current record's "LastTopicId" value
 * @method integer             getLastTopicBy()           Returns the current record's "LastTopicBy" value
 * @method integer             getLastRepliedId()         Returns the current record's "LastRepliedId" value
 * @method integer             getLastRepliedBy()         Returns the current record's "LastRepliedBy" value
 * @method string              getTitle()                 Returns the current record's "Title" value
 * @method string              getDescription()           Returns the current record's "Description" value
 * @method integer             getTotalTopic()            Returns the current record's "TotalTopic" value
 * @method integer             getTotalReplies()          Returns the current record's "TotalReplies" value
 * @method integer             getOrdering()              Returns the current record's "Ordering" value
 * @method enum                getStatus()                Returns the current record's "Status" value
 * @method ForumCategories     getForumsForumCategories() Returns the current record's "ForumsForumCategories" value
 * @method Doctrine_Collection getForumsForumTopics()     Returns the current record's "ForumsForumTopics" collection
 * @method Doctrine_Collection getForumsForumReply()      Returns the current record's "ForumsForumReply" collection
 * @method Forums              setId()                    Sets the current record's "Id" value
 * @method Forums              setForumCategoriesId()     Sets the current record's "ForumCategoriesId" value
 * @method Forums              setLastTopicId()           Sets the current record's "LastTopicId" value
 * @method Forums              setLastTopicBy()           Sets the current record's "LastTopicBy" value
 * @method Forums              setLastRepliedId()         Sets the current record's "LastRepliedId" value
 * @method Forums              setLastRepliedBy()         Sets the current record's "LastRepliedBy" value
 * @method Forums              setTitle()                 Sets the current record's "Title" value
 * @method Forums              setDescription()           Sets the current record's "Description" value
 * @method Forums              setTotalTopic()            Sets the current record's "TotalTopic" value
 * @method Forums              setTotalReplies()          Sets the current record's "TotalReplies" value
 * @method Forums              setOrdering()              Sets the current record's "Ordering" value
 * @method Forums              setStatus()                Sets the current record's "Status" value
 * @method Forums              setForumsForumCategories() Sets the current record's "ForumsForumCategories" value
 * @method Forums              setForumsForumTopics()     Sets the current record's "ForumsForumTopics" collection
 * @method Forums              setForumsForumReply()      Sets the current record's "ForumsForumReply" collection
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseForums extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Forums');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ForumCategoriesId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('LastTopicId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('LastTopicBy', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('LastRepliedId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('LastRepliedBy', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('Title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('Description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('TotalTopic', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('TotalReplies', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('Ordering', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('Status', 'enum', 8, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Active',
              1 => 'Inactive',
              2 => 'Delete',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ForumCategories as ForumsForumCategories', array(
             'local' => 'ForumCategoriesId',
             'foreign' => 'Id'));

        $this->hasMany('ForumTopics as ForumsForumTopics', array(
             'local' => 'Id',
             'foreign' => 'ForumId'));

        $this->hasMany('ForumReply as ForumsForumReply', array(
             'local' => 'Id',
             'foreign' => 'ForumId'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}