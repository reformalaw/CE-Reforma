<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserPracticeAreaLocation', 'doctrine');

/**
 * BaseUserPracticeAreaLocation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property integer $UserId
 * @property integer $StateId
 * @property integer $CountyId
 * @property Users $UserPracticeAreaLocationUsers
 * @property States $UserPracticeAreaLocationState
 * @property Counties $UserPracticeAreaLocationCounties
 * @property UserProfile $UserProfile
 * 
 * @method integer                  getId()                               Returns the current record's "Id" value
 * @method integer                  getUserId()                           Returns the current record's "UserId" value
 * @method integer                  getStateId()                          Returns the current record's "StateId" value
 * @method integer                  getCountyId()                         Returns the current record's "CountyId" value
 * @method Users                    getUserPracticeAreaLocationUsers()    Returns the current record's "UserPracticeAreaLocationUsers" value
 * @method States                   getUserPracticeAreaLocationState()    Returns the current record's "UserPracticeAreaLocationState" value
 * @method Counties                 getUserPracticeAreaLocationCounties() Returns the current record's "UserPracticeAreaLocationCounties" value
 * @method UserProfile              getUserProfile()                      Returns the current record's "UserProfile" value
 * @method UserPracticeAreaLocation setId()                               Sets the current record's "Id" value
 * @method UserPracticeAreaLocation setUserId()                           Sets the current record's "UserId" value
 * @method UserPracticeAreaLocation setStateId()                          Sets the current record's "StateId" value
 * @method UserPracticeAreaLocation setCountyId()                         Sets the current record's "CountyId" value
 * @method UserPracticeAreaLocation setUserPracticeAreaLocationUsers()    Sets the current record's "UserPracticeAreaLocationUsers" value
 * @method UserPracticeAreaLocation setUserPracticeAreaLocationState()    Sets the current record's "UserPracticeAreaLocationState" value
 * @method UserPracticeAreaLocation setUserPracticeAreaLocationCounties() Sets the current record's "UserPracticeAreaLocationCounties" value
 * @method UserPracticeAreaLocation setUserProfile()                      Sets the current record's "UserProfile" value
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserPracticeAreaLocation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('UserPracticeAreaLocation');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('UserId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('StateId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('CountyId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Users as UserPracticeAreaLocationUsers', array(
             'local' => 'UserId',
             'foreign' => 'Id'));

        $this->hasOne('States as UserPracticeAreaLocationState', array(
             'local' => 'StateId',
             'foreign' => 'Id'));

        $this->hasOne('Counties as UserPracticeAreaLocationCounties', array(
             'local' => 'CountyId',
             'foreign' => 'Id'));

        $this->hasOne('UserProfile', array(
             'local' => 'UserId',
             'foreign' => 'UserId'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}