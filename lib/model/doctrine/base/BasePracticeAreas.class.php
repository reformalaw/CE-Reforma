<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PracticeAreas', 'doctrine');

/**
 * BasePracticeAreas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property string $Name
 * @property integer $ParentId
 * @property text $Description
 * @property string $slug
 * @property enum $Status
 * @property Doctrine_Collection $PracticeAreasParents
 * @property Doctrine_Collection $PracticeAreasUserPracticeArea
 * @property Doctrine_Collection $PracticeAreasUserPracticeAreaCat
 * @property Doctrine_Collection $PracticeAreasUserPracticeAreaSubCat
 * @property Doctrine_Collection $PracticeAreasUserPracticeAreaChild
 * @property PracticeAreas $PracticeAreas
 * @property Doctrine_Collection $UserPracticeArea
 * 
 * @method integer             getId()                                  Returns the current record's "Id" value
 * @method string              getName()                                Returns the current record's "Name" value
 * @method integer             getParentId()                            Returns the current record's "ParentId" value
 * @method text                getDescription()                         Returns the current record's "Description" value
 * @method string              getSlug()                                Returns the current record's "slug" value
 * @method enum                getStatus()                              Returns the current record's "Status" value
 * @method Doctrine_Collection getPracticeAreasParents()                Returns the current record's "PracticeAreasParents" collection
 * @method Doctrine_Collection getPracticeAreasUserPracticeArea()       Returns the current record's "PracticeAreasUserPracticeArea" collection
 * @method Doctrine_Collection getPracticeAreasUserPracticeAreaCat()    Returns the current record's "PracticeAreasUserPracticeAreaCat" collection
 * @method Doctrine_Collection getPracticeAreasUserPracticeAreaSubCat() Returns the current record's "PracticeAreasUserPracticeAreaSubCat" collection
 * @method Doctrine_Collection getPracticeAreasUserPracticeAreaChild()  Returns the current record's "PracticeAreasUserPracticeAreaChild" collection
 * @method PracticeAreas       getPracticeAreas()                       Returns the current record's "PracticeAreas" value
 * @method Doctrine_Collection getUserPracticeArea()                    Returns the current record's "UserPracticeArea" collection
 * @method PracticeAreas       setId()                                  Sets the current record's "Id" value
 * @method PracticeAreas       setName()                                Sets the current record's "Name" value
 * @method PracticeAreas       setParentId()                            Sets the current record's "ParentId" value
 * @method PracticeAreas       setDescription()                         Sets the current record's "Description" value
 * @method PracticeAreas       setSlug()                                Sets the current record's "slug" value
 * @method PracticeAreas       setStatus()                              Sets the current record's "Status" value
 * @method PracticeAreas       setPracticeAreasParents()                Sets the current record's "PracticeAreasParents" collection
 * @method PracticeAreas       setPracticeAreasUserPracticeArea()       Sets the current record's "PracticeAreasUserPracticeArea" collection
 * @method PracticeAreas       setPracticeAreasUserPracticeAreaCat()    Sets the current record's "PracticeAreasUserPracticeAreaCat" collection
 * @method PracticeAreas       setPracticeAreasUserPracticeAreaSubCat() Sets the current record's "PracticeAreasUserPracticeAreaSubCat" collection
 * @method PracticeAreas       setPracticeAreasUserPracticeAreaChild()  Sets the current record's "PracticeAreasUserPracticeAreaChild" collection
 * @method PracticeAreas       setPracticeAreas()                       Sets the current record's "PracticeAreas" value
 * @method PracticeAreas       setUserPracticeArea()                    Sets the current record's "UserPracticeArea" collection
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePracticeAreas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('PracticeAreas');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('Name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('ParentId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('Description', 'text', null, array(
             'type' => 'text',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('slug', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             ));
        $this->hasColumn('Status', 'enum', 8, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Active',
              1 => 'Inactive',
              2 => 'Deleted',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('PracticeAreas as PracticeAreasParents', array(
             'local' => 'ParentId',
             'foreign' => 'Id'));

        $this->hasMany('UserPracticeArea as PracticeAreasUserPracticeArea', array(
             'local' => 'Id',
             'foreign' => 'PracticeAreaId'));

        $this->hasMany('UserPracticeArea as PracticeAreasUserPracticeAreaCat', array(
             'local' => 'Id',
             'foreign' => 'CatId'));

        $this->hasMany('UserPracticeArea as PracticeAreasUserPracticeAreaSubCat', array(
             'local' => 'Id',
             'foreign' => 'SubCatId'));

        $this->hasMany('UserPracticeArea as PracticeAreasUserPracticeAreaChild', array(
             'local' => 'Id',
             'foreign' => 'ChildId'));

        $this->hasOne('PracticeAreas', array(
             'local' => 'Id',
             'foreign' => 'ParentId'));

        $this->hasMany('UserPracticeArea', array(
             'local' => 'Id',
             'foreign' => 'PracticeareaId'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'canUpdate' => false,
             'fields' => 
             array(
              0 => 'Name',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}