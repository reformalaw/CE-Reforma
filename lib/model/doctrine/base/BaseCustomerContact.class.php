<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CustomerContact', 'doctrine');

/**
 * BaseCustomerContact
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property integer $UserId
 * @property string $Label
 * @property string $FieldType
 * @property string $Options
 * @property enum $Required
 * @property integer $Ordering
 * @property string $OptionsSlug
 * @property Doctrine_Collection $CustomerContactUsers
 * 
 * @method integer             getId()                   Returns the current record's "Id" value
 * @method integer             getUserId()               Returns the current record's "UserId" value
 * @method string              getLabel()                Returns the current record's "Label" value
 * @method string              getFieldType()            Returns the current record's "FieldType" value
 * @method string              getOptions()              Returns the current record's "Options" value
 * @method enum                getRequired()             Returns the current record's "Required" value
 * @method integer             getOrdering()             Returns the current record's "Ordering" value
 * @method string              getOptionsSlug()          Returns the current record's "OptionsSlug" value
 * @method Doctrine_Collection getCustomerContactUsers() Returns the current record's "CustomerContactUsers" collection
 * @method CustomerContact     setId()                   Sets the current record's "Id" value
 * @method CustomerContact     setUserId()               Sets the current record's "UserId" value
 * @method CustomerContact     setLabel()                Sets the current record's "Label" value
 * @method CustomerContact     setFieldType()            Sets the current record's "FieldType" value
 * @method CustomerContact     setOptions()              Sets the current record's "Options" value
 * @method CustomerContact     setRequired()             Sets the current record's "Required" value
 * @method CustomerContact     setOrdering()             Sets the current record's "Ordering" value
 * @method CustomerContact     setOptionsSlug()          Sets the current record's "OptionsSlug" value
 * @method CustomerContact     setCustomerContactUsers() Sets the current record's "CustomerContactUsers" collection
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCustomerContact extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('CustomerContact');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('UserId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('Label', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('FieldType', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('Options', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('Required', 'enum', 3, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Yes',
              1 => 'No',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('Ordering', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('OptionsSlug', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Users as CustomerContactUsers', array(
             'local' => 'UserId',
             'foreign' => 'Id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}