<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Roles', 'doctrine');

/**
 * BaseRoles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property string $Name
 * @property enum $Status
 * @property Doctrine_Collection $RolesRolesXPermission
 * @property UserRoles $UserRoles
 * 
 * @method integer             getId()                    Returns the current record's "Id" value
 * @method string              getName()                  Returns the current record's "Name" value
 * @method enum                getStatus()                Returns the current record's "Status" value
 * @method Doctrine_Collection getRolesRolesXPermission() Returns the current record's "RolesRolesXPermission" collection
 * @method UserRoles           getUserRoles()             Returns the current record's "UserRoles" value
 * @method Roles               setId()                    Sets the current record's "Id" value
 * @method Roles               setName()                  Sets the current record's "Name" value
 * @method Roles               setStatus()                Sets the current record's "Status" value
 * @method Roles               setRolesRolesXPermission() Sets the current record's "RolesRolesXPermission" collection
 * @method Roles               setUserRoles()             Sets the current record's "UserRoles" value
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRoles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Roles');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('Name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('Status', 'enum', 8, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Active',
              1 => 'Inactive',
              2 => 'Deleted',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('RolesXPermission as RolesRolesXPermission', array(
             'local' => 'Id',
             'foreign' => 'RoleId'));

        $this->hasOne('UserRoles', array(
             'local' => 'Id',
             'foreign' => 'RoleId'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}