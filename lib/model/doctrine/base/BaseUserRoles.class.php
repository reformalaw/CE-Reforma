<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserRoles', 'doctrine');

/**
 * BaseUserRoles
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property integer $UserId
 * @property integer $RoleId
 * @property Doctrine_Collection $UserRolesUsers
 * @property Doctrine_Collection $UserRolesRoles
 * 
 * @method integer             getId()             Returns the current record's "Id" value
 * @method integer             getUserId()         Returns the current record's "UserId" value
 * @method integer             getRoleId()         Returns the current record's "RoleId" value
 * @method Doctrine_Collection getUserRolesUsers() Returns the current record's "UserRolesUsers" collection
 * @method Doctrine_Collection getUserRolesRoles() Returns the current record's "UserRolesRoles" collection
 * @method UserRoles           setId()             Sets the current record's "Id" value
 * @method UserRoles           setUserId()         Sets the current record's "UserId" value
 * @method UserRoles           setRoleId()         Sets the current record's "RoleId" value
 * @method UserRoles           setUserRolesUsers() Sets the current record's "UserRolesUsers" collection
 * @method UserRoles           setUserRolesRoles() Sets the current record's "UserRolesRoles" collection
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserRoles extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('UserRoles');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('UserId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('RoleId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Users as UserRolesUsers', array(
             'local' => 'UserId',
             'foreign' => 'Id'));

        $this->hasMany('Roles as UserRolesRoles', array(
             'local' => 'RoleId',
             'foreign' => 'Id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}