<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ForumReply', 'doctrine');

/**
 * BaseForumReply
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property integer $ForumId
 * @property integer $TopicId
 * @property integer $UserId
 * @property string $Reply
 * @property enum $Status
 * @property Forums $ForumReplyForums
 * @property ForumTopics $ForumReplyForumTopics
 * @property Users $ForumReplyUsers
 * 
 * @method integer     getId()                    Returns the current record's "Id" value
 * @method integer     getForumId()               Returns the current record's "ForumId" value
 * @method integer     getTopicId()               Returns the current record's "TopicId" value
 * @method integer     getUserId()                Returns the current record's "UserId" value
 * @method string      getReply()                 Returns the current record's "Reply" value
 * @method enum        getStatus()                Returns the current record's "Status" value
 * @method Forums      getForumReplyForums()      Returns the current record's "ForumReplyForums" value
 * @method ForumTopics getForumReplyForumTopics() Returns the current record's "ForumReplyForumTopics" value
 * @method Users       getForumReplyUsers()       Returns the current record's "ForumReplyUsers" value
 * @method ForumReply  setId()                    Sets the current record's "Id" value
 * @method ForumReply  setForumId()               Sets the current record's "ForumId" value
 * @method ForumReply  setTopicId()               Sets the current record's "TopicId" value
 * @method ForumReply  setUserId()                Sets the current record's "UserId" value
 * @method ForumReply  setReply()                 Sets the current record's "Reply" value
 * @method ForumReply  setStatus()                Sets the current record's "Status" value
 * @method ForumReply  setForumReplyForums()      Sets the current record's "ForumReplyForums" value
 * @method ForumReply  setForumReplyForumTopics() Sets the current record's "ForumReplyForumTopics" value
 * @method ForumReply  setForumReplyUsers()       Sets the current record's "ForumReplyUsers" value
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseForumReply extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ForumReply');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('ForumId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('TopicId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('UserId', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('Reply', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('Status', 'enum', 8, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'Active',
              1 => 'Inactive',
              2 => 'Deleted',
             ),
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Forums as ForumReplyForums', array(
             'local' => 'ForumId',
             'foreign' => 'Id'));

        $this->hasOne('ForumTopics as ForumReplyForumTopics', array(
             'local' => 'TopicId',
             'foreign' => 'Id'));

        $this->hasOne('Users as ForumReplyUsers', array(
             'local' => 'UserId',
             'foreign' => 'Id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}