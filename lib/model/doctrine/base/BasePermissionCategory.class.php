<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PermissionCategory', 'doctrine');

/**
 * BasePermissionCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $Id
 * @property string $Name
 * @property Doctrine_Collection $PermissionCategoryPermissions
 * @property RolesXPermission $RolesXPermission
 * 
 * @method integer             getId()                            Returns the current record's "Id" value
 * @method string              getName()                          Returns the current record's "Name" value
 * @method Doctrine_Collection getPermissionCategoryPermissions() Returns the current record's "PermissionCategoryPermissions" collection
 * @method RolesXPermission    getRolesXPermission()              Returns the current record's "RolesXPermission" value
 * @method PermissionCategory  setId()                            Sets the current record's "Id" value
 * @method PermissionCategory  setName()                          Sets the current record's "Name" value
 * @method PermissionCategory  setPermissionCategoryPermissions() Sets the current record's "PermissionCategoryPermissions" collection
 * @method PermissionCategory  setRolesXPermission()              Sets the current record's "RolesXPermission" value
 * 
 * @package    counceledge
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePermissionCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('PermissionCategory');
        $this->hasColumn('Id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('Name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Permissions as PermissionCategoryPermissions', array(
             'local' => 'Id',
             'foreign' => 'PermissionCategoryId'));

        $this->hasOne('RolesXPermission', array(
             'local' => 'Id',
             'foreign' => 'PermissionCategoryId'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'CreateDateTime',
              'type' => 'timestamp',
             ),
             'updated' => 
             array(
              'name' => 'UpdateDateTime',
              'type' => 'timestamp',
             ),
             ));
        $this->actAs($timestampable0);
    }
}