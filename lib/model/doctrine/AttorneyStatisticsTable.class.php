<?php

/**
 * AttorneyStatisticsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AttorneyStatisticsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object AttorneyStatisticsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('AttorneyStatistics');
    }

    /**
     * This function is used for add the ip at statistics table
     *
     * @param unknown_type $ip
     * @param unknown_type $host
     */
    public static function addToStatisticsByProfile($ip, $userId){
//         $ipFlag = self::getCheckIpExist($ip, $userId);
//         if ($ipFlag == false) {      //commented by jaydip dodiya for remove the ip address entry

            $objIp = new AttorneyStatistics();
            $objIp->setUserId($userId);
            $objIp->setIpAddress($ip);
            $objIp->setVisitDate(date('Y-m-d'));
            $objIp->setType('Profile');
            $objIp->save();
//         }
    } // End of Function

    /**
     * This function is use for check the ip as well as current date.
     *
     * @param unknown_type $ip
     * @return unknown
     */
    public static function getCheckIpExist($ip, $userId)
    {
        $dbIp = Doctrine_Query::create()
        ->from('AttorneyStatistics as')
        ->where('as.IpAddress = ?', $ip)
        ->andWhere('as.UserId = ?', $userId)
        ->andWhere('as.Type = ?', 'Profile')
        ->andWhere('as.VisitDate = ?', date('Y-m-d'));

        $resultIp = $dbIp->fetchArray();
        $dbIp->free();
        if (count($resultIp) == 1) {
            return true;
        }else {
            return false;
        }
    }

    /**
     * This function is used for add the ip at statistics table
     *
     * @param unknown_type $ip
     * @param unknown_type $host
     */
    public static function addToStatisticsByContact($ip, $userId){
        $objIp = new AttorneyStatistics();
        $objIp->setUserId($userId);
        $objIp->setIpAddress($ip);
        $objIp->setVisitDate(date('Y-m-d'));
        $objIp->setType('Contact');
        $objIp->save();

    } // End of Function

    /**
     * This function is used for profile statistics
     *
     * @param integer $customerId
     * @param string $BtnDay
     * @param string $DayType
     */
	public static function getProfileStatistics($customerId="", $BtnDay = '1' , $DayType = 'DAY')
    {
		$start_date = date('Y-m-d',strtotime('-'.$BtnDay.$DayType));  // Get Start date
        $end_date   = date('y-m-d');                     // Get Current date

        $sql = Doctrine_Query::create()
                ->select('A.*,count(*) AS TotalVisit')
                ->from('AttorneyStatistics A')
                ->where('A.VisitDate BETWEEN ? AND ?', array($start_date,$end_date));

                if($customerId != "")
					$sql->andWhere('A.UserId = ?', $customerId);
				
					
		$sql->andWhere("A.Type = ?", "Profile");
		$sql->groupBy('A.VisitDate');

        $sqlResult =$sql->fetchArray();

        return $sqlResult;
    }

    /**
     * This function is used for contact statistics
     *
     * @param integer $customerId
     * @param string $BtnDay
     * @param string $DayType
     */
	public static function getContactStatistics($customerId="", $BtnDay = '1' , $DayType = 'DAY')
    {
		$start_date = date('Y-m-d',strtotime('-'.$BtnDay.$DayType));  // Get Start date
        $end_date   = date('y-m-d');                     // Get Current date

        $sql = Doctrine_Query::create()
                ->select('A.*,count(*) AS TotalVisit')
                ->from('AttorneyStatistics A')
                ->where('A.VisitDate BETWEEN ? AND ?', array($start_date,$end_date))
                ->andWhere("A.Type = ?", "Contact");

                if($customerId != "")
					$sql->andWhere('A.UserId = ?', $customerId);

		$sql->groupBy('A.VisitDate');

        $sqlResult =$sql->fetchArray();

        return $sqlResult;
    }
}